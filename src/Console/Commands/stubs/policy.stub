<?php

namespace {{ namespace }};

use Illuminate\Auth\Access\HandlesAuthorization;
use Illuminate\Auth\Access\Response;
use {{ namespacedModel }};
use {{ namespacedUserModel }};

class {{ class }}
{
  use HandlesAuthorization;

  /**
   * Determine whether the user can view any models.
   */
  public function viewAny({{ user }} $user): Response
  {
    if ($user === auth()->user()) {
      return Response::allow();
    }

    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can view the model.
   */
  public function view({{ user }} $user): Response
  {
    if ($user === auth()->user()) {
      return Response::allow();
    }

    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can create models.
   */
  public function create({{ user }} $user): Response
  {
    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can update the model.
   */
  public function update({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
  {
    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can delete the model.
   */
  public function delete({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
  {
    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can restore the model.
   */
  public function restore({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
  {
    return Response::denyWithStatus(403);
  }

  /**
   * Determine whether the user can permanently delete the model.
   */
  public function destroy({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
  {
    return Response::denyWithStatus(403);
  }
}
